"use client";

import { useState } from "react";
import axios from "axios";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import Tables from "./tables";
import Price from "./price";
import { toast } from "sonner";

const Tab = () => {
  const [orderNumber, setOrderNumber] = useState("");
  const [price, setPrice] = useState(0);
  const [weight, setWeight] = useState(0);
  const [description, setDescription] = useState<string>("");

  const handleCreateOrder = async () => {
    if (!orderNumber || price <= 0) {
      toast.error("–¢–∞ –∑–∞—Ö–∏–∞–ª–≥—ã–Ω –¥—É–≥–∞–∞—Ä –±–æ–ª–æ–Ω “Ø–Ω–∏–π–≥ –æ—Ä—É—É–ª–Ω–∞ —É—É!");
      return;
    }

    try {
      await axios.post(`${process.env.NEXT_PUBLIC_API_URL}/order`, {
        orderNumber,
        price,
        weight,
        status: "–ë“Ø—Ä—Ç–≥“Ø“Ø–ª—Å—ç–Ω",
        location: "–•—è—Ç–∞–¥",
      });

      toast.success("‚úÖ –ó–∞—Ö–∏–∞–ª–≥–∞ –∞–º–∂–∏–ª—Ç—Ç–∞–π “Ø“Ø—Å–≥—ç–ª—ç—ç!");
      setOrderNumber("");
      setDescription("");
      setPrice(0);
      setWeight(0);
    } catch (error) {
      console.error(error);
      toast.error("‚ùå –ó–∞—Ö–∏–∞–ª–≥–∞ “Ø“Ø—Å–≥—ç—Ö—ç–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞!");
    }
  };

  return (
    <div className="flex flex-col w-full max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 mt-10">
      <Tabs defaultValue="createOrder" className="w-full">
        <TabsList className="flex flex-wrap justify-center sm:justify-start gap-2 mb-6">
          <TabsTrigger
            value="createOrder"
            className="px-4 py-2 text-sm sm:text-base"
          >
            –ó–∞—Ö–∏–∞–ª–≥–∞ “Ø“Ø—Å–≥—ç—Ö
          </TabsTrigger>
          <TabsTrigger
            value="tables"
            className="px-4 py-2 text-sm sm:text-base"
          >
            –ë“Ø—Ö –∑–∞—Ö–∏–∞–ª–≥–∞
          </TabsTrigger>
        </TabsList>

        {/* ‚ûï Create Order */}
        <TabsContent value="createOrder">
          <Card className="shadow-sm border">
            <CardHeader>
              <CardTitle className="text-xl sm:text-2xl font-bold">
                –ó–∞—Ö–∏–∞–ª–≥–∞ “Ø“Ø—Å–≥—ç—Ö
              </CardTitle>
              <CardDescription>
                –®–∏–Ω—ç –∑–∞—Ö–∏–∞–ª–≥—ã–Ω –º—ç–¥—ç—ç–ª–ª—ç—ç –±”©–≥–ª”©–Ω”© “Ø“Ø.
              </CardDescription>
            </CardHeader>

            <CardContent className="grid gap-6">
              {/* Input fields */}
              <div className="flex flex-col sm:flex-row gap-6">
                <div className="grid gap-2 w-full">
                  <Label htmlFor="orderNumber">–ó–∞—Ö–∏–∞–ª–≥—ã–Ω –¥—É–≥–∞–∞—Ä</Label>
                  <Input
                    id="orderNumber"
                    value={orderNumber}
                    onChange={(e) => setOrderNumber(e.target.value)}
                    placeholder="–∂–∏—à—ç—ç: ORD-20251001-001"
                  />
                </div>
                <div className="grid gap-2 w-full">
                  <Label>–¢—ç–º–¥—ç–≥–ª—ç–ª</Label>
                  <Input
                    type="text"
                    placeholder="–∂–∏—à—ç—ç: –•–∞–≥–∞—Ä–∞—Ö –∞—é—É–ª—Ç–∞–π, –¥—ç—ç—à —Ö–∞—Ä—É—É–ª–∂ —Ç–∞–≤–∏—Ö..."
                    value={description}
                    onChange={(e) => setDescription(e.target.value)}
                  />
                </div>
              </div>

              {/* ‚úÖ Price & Weight section */}
              <Price
                onChange={({ price, chargeableWeight }) => {
                  setPrice(price);
                  setWeight(chargeableWeight);
                }}
              />
            </CardContent>

            <CardFooter className="flex justify-end">
              <Button
                onClick={handleCreateOrder}
                className="w-full sm:w-auto shadow-md"
              >
                –ó–∞—Ö–∏–∞–ª–≥–∞ “Ø“Ø—Å–≥—ç—Ö
              </Button>
            </CardFooter>
          </Card>
        </TabsContent>

        {/* üìã All Orders */}
        <TabsContent value="tables">
          <Card className="shadow-sm border">
            <CardHeader>
              <CardTitle className="text-xl sm:text-2xl font-bold">
                –ë“Ø—Ö –∑–∞—Ö–∏–∞–ª–≥—É—É–¥
              </CardTitle>
              <CardDescription>
                –≠–Ω–¥—ç—ç—Å —Ç–∞ –∑–∞—Ö–∏–∞–ª–≥—ã–Ω —Å—Ç–∞—Ç—É—Å –±–æ–ª–æ–Ω –±–∞–π—Ä—à–ª—ã–≥ —É–¥–∏—Ä–¥–∞–∂ –±–æ–ª–Ω–æ.
              </CardDescription>
            </CardHeader>
            <CardContent className="overflow-x-auto">
              <Tables />
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
};

export default Tab;
